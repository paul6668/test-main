#!/bin/bash

# Define the output CSV file
output_file="nslookup_results.csv"

# Write the CSV header
echo "Route,Address" > $output_file

# Get the list of routes from the istio-system namespace
routes=$(oc get route -n istio-system | grep project | awk '{print $2}')

# Loop through each route and perform nslookup
for route in $routes; 
do
  echo "Processing route: $route"
  
  # Perform nslookup and extract the address
  address=$(nslookup $route | grep 'Address:' | tail -n1 | awk '{print $2}')
  
  # Append the result to the CSV file
  echo "$route,$address" >> $output_file
done

echo "Results written to $output_file"



3568b95554-gw.cloud.aquasec.com:443\"/" | oc apply -f -
•	oc create secret generic aqua-kube-enforcer-token --from-literal=token=af162024-ba00-4a88-9f33-81ebeb693b7f -n aqua 


•	docker run -d  registry.aquasec.com/scanner:2406.10.19 daemon --token fcfa710ce5d5fb5ce103afd4234e888e6a66f48d --host https://3568b95554.cloud.aquasec.com


38207c36-5d4f-477a-ba48-c8133ca905ba

z2bW.F?5



For openshift cluster (Both Aqua enforcers and Kube Enforcers):

•	oc create namespace aqua 
•	oc create secret docker-registry aqua-registry --docker-server=registry.aquasec.com --docker-username=<registry-username> --docker-password=<registry-password> -n aqua 
•	curl -s  https://raw.githubusercontent.com/aquasecurity/deployments/2022.4/enforcers/kube_enforcer/kubernetes_and_openshift/manifests/kube_enforcer/gen_ke_certs.sh | bash
•	cat 001_kube_enforcer_config.yaml | sed -e "s/CLUSTER_NAME:[[:blank:]]*\".*\"/CLUSTER_NAME: \"lab\"/" -e "s/AQUA_GATEWAY_SECURE_ADDRESS:[[:blank:]]*\".*\"/AQUA_GATEWAY_SECURE_ADDRESS: \"3568b95554-gw.cloud.aquasec.com:443\"/" | oc apply -f -
•	oc create secret generic aqua-kube-enforcer-token --from-literal=token=af162024-ba00-4a88-9f33-81ebeb693b7f -n aqua 
•	oc create secret generic kube-enforcer-ssl --from-file aqua_ke.key --from-file aqua_ke.crt -n aqua
•	oc adm policy add-cluster-role-to-user cluster-reader system:serviceaccount:aqua:aqua-kube-enforcer-sa
•	oc adm policy add-scc-to-user privileged system:serviceaccount:aqua:aqua-kube-enforcer-sa
•	curl -s https://raw.githubusercontent.com/aquasecurity/deployments/2022.4/enforcers/kube_enforcer/kubernetes_and_openshift/manifests/kube_enforcer/003_kube_enforcer_deploy.yaml | sed "s/image: registry.aquasec.com/image: registry.aquasec.com/" | oc apply -f -
•	oc apply -f https://raw.githubusercontent.com/aquasecurity/deployments/2022.4/enforcers/aqua_enforcer/kubernetes_and_openshift/manifests/001_aqua_enforcer_rbac/openshift/aqua_sa.yaml
•	oc create secret generic enforcer-token --from-literal=token=38207c36-5d4f-477a-ba48-c8133ca905ba -n aqua
•	curl -s https://raw.githubusercontent.com/aquasecurity/deployments/2022.4/enforcers/aqua_enforcer/kubernetes_and_openshift/manifests/002_aqua_enforcer_configMap.yaml | sed -e "s/AQUA_SERVER:[[:blank:]]*\".*\"/AQUA_SERVER: \"3568b95554-gw.cloud.aquasec.com:443\"/" | oc apply -f -
•	oc apply -f https://raw.githubusercontent.com/aquasecurity/deployments/2022.4/enforcers/aqua_enforcer/kubernetes_and_openshift/manifests/004_aqua_enforcer_daemonset.yaml

Scanner (Either way, docker or openshift)
•	Deploy Scanner on Kubernetes using Manifest Files – Aqua Docs (aquasec.com)
•	docker run -d  registry.aquasec.com/scanner:2406.10.19 daemon --token fcfa710ce5d5fb5ce103afd4234e888e6a66f48d --host https://3568b95554.cloud.aquasec.com



---
2024-07-02 07:27:08.584 WARN Failed connecting to gRPC server. Attempt: 1, sleep duration (seconds): 10, error: Failed to register Kube Enforcer: invalid token, get it approved from administrator
2024-07-02 07:27:18.585 INFO Attempting to connect to management server via gRPC
2024-07-02 07:27:18.585 INFO gRPC client - TLS minimum version is set to: {"version": 771}
2024-07-02 07:27:18.586 INFO Successfully connected to the server via gRPC
2024-07-02 07:27:18.586 INFO Waiting for leader election sync
2024-07-02 07:27:18.587 INFO Leader election sync is done. {"LeaderPodName": "aqua-kube-enforcer-6478849984-nkwr4"}
2024-07-02 07:27:18.587 INFO Registering Kube Enforcer with Gateway
2024-07-02 07:27:26.756 WARN Failed connecting to gRPC server. Attempt: 2, sleep duration (seconds): 20, error: Failed to register Kube Enforcer: invalid token, get it approved from administrator


428e6a28-5807-47f7-a563-8b0336cf76c6
{"level":"info","ts":"2024-07-05 03:52:10.393","msg":"Proxy-Client started, version: 2022.4.517.21, commit-hash: 8d89921"}
{"level":"info","ts":"2024-07-05 03:52:10.394","msg":"connecting to server 3568b95554-gw.cloud.aquasec.com:443"}
{"level":"info","ts":"2024-07-05 03:52:10.395","msg":"health server listening on: 8080"}
{"level":"info","ts":"2024-07-05 03:52:10.395","msg":"internal proxy listening on: 5555"}
â‡¨ http server started on [::]:8080
{"level":"error","ts":"2024-07-05 03:52:11.569","msg":"failed connecting to server: authentication failure: rpc error: code = Unauthenticated desc = wrong token"}
{"level":"info","ts":"2024-07-05 03:52:12.312","msg":"connecting to server 3568b95554-gw.cloud.aquasec.com:443"}
{"level":"error","ts":"2024-07-05 03:52:13.273","msg":"failed connecting to server: authentication failure: rpc error: code = Unauthenticated desc = wrong token"}
{"level":"info","ts":"2024-07-05 03:52:14.203","msg":"connecting to server 3568b95554-gw.cloud.aquasec.com:443"}
{"level":"error","ts":"2024-07-05 03:52:15.134","msg":"failed connecting to server: authentication failure: rpc error: code = Unauthenticated desc = wrong token"}
{"level":"info","ts":"2024-07-05 03:52:16.783","msg":"connecting to server 3568b95554-gw.cloud.aquasec.com:443"}
{"level":"error","ts":"2024-07-05 03:52:17.719","msg":"failed connecting to server: authentication failure: rpc error: code = Unauthenticated desc = wrong token"}
{"level":"info","ts":"2024-07-05 03:52:23.324","msg":"connecting to server 3568b95554-gw.cloud.aquasec.com:443"}
